version: '3.8'

services: 

  db1:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: user_service_db
      MYSQL_ROOT_PASSWORD: h
    volumes:
      - user_service-db-data:/var/lib/mysql
    restart: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  user-service:
    build: ./user-service
    volumes:
       # Code source SANS vendor
      - ./user-service:/var/www/laravel:cached
      # Ignore vendor pour ne pas écraser celui installé dans l'image
      - /var/www/laravel/vendor
      # Si tu veux rendre persistants les fichiers de logs/cache
      - user_service-storage:/var/www/laravel/storage
      - user_service-bootstrap_cache:/var/www/laravel/bootstrap/cache
    ports:
      - "8001:80"
    depends_on:
      db1:
        condition: service_healthy
    environment:
      DB_HOST: db1
      DB_PORT: 3306
      DB_DATABASE: user_service_db
      DB_USERNAME: root
      DB_PASSWORD: h # Met une vraie valeur si nécessaire
    restart: on-failure
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api"]
      interval: 30s
      timeout: 10s
      retries: 3

  db2:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: traffic_service_db
      MYSQL_ROOT_PASSWORD: h
    volumes:
      - traffic_service-db-data:/var/lib/mysql
    restart: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  traffic-service:
    build: ./traffic-service
    ports:
      - "8002:80"
    depends_on:
      db2:
        condition: service_healthy
      # user-service:
      #   condition: service_healthy
    environment:
      MICRO_SERVICE_AUTH_URL: http://user-service:80
      DB_HOST: db2
      DB_PORT: 3306
      DB_DATABASE: traffic_service_db
      DB_USERNAME: root
      DB_PASSWORD: h # Met une vraie valeur si nécessaire
    restart: on-failure
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./traffic-service:/var/www/html


  trafficadmin-service:
    build: ./trafficadmin
    ports:
      - "8000:80"
    
    environment:
      MICRO_SERVICE_AUTH_URL: http://user-service:80
      MAP_SERVICE_URL: http://traffic-service:80
      
    restart: on-failure
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/login"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./trafficadmin:/var/www/html
    

networks:
  # trafine-net:
  #   driver: bridge
  default:
    external: true
    name: shared-net  
volumes:
  user_service-db-data:
  traffic_service-db-data:
  user_service-storage:
  user_service-bootstrap_cache:
